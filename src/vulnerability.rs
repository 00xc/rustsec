//! An `Advisory` for which a particular crate in a `Lockfile` is vulnerable

use advisory::Advisory;
use package::Package;

/// A vulnerable package and the associated advisory
#[derive(Debug, PartialEq, Clone)]
pub struct Vulnerability {
    /// A security advisory for which the package is vulnerable
    pub advisory: Advisory,

    /// A vulnerable package
    pub package: Package,
}

impl Vulnerability {
    /// Create a new vulnerability object from the given references
    pub fn new(advisory: &Advisory, package: &Package) -> Self {
        Self {
            advisory: advisory.clone(),
            package: package.clone(),
        }
    }
}
